Elm.ICOCell = Elm.ICOCell || {};
Elm.ICOCell.make = function (_elm) {
   "use strict";
   _elm.ICOCell = _elm.ICOCell || {};
   if (_elm.ICOCell.values) return _elm.ICOCell.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var getCellID = function (cell) {    var _p0 = cell;return function (_) {    return _.id;}(_p0._0);};
   var isCellSelected = function (cell) {    var _p1 = cell;return function (_) {    return _.selected;}(_p1._0);};
   var getCellValue = function (cell) {    var _p2 = cell;return function (_) {    return _.value;}(_p2._0);};
   var icoCellView = F2(function (cellInfo,onClick) {
      var classValue = "ICOCell ";
      return A2($Html.div,
      _U.list([A2($Html$Attributes.attribute,"cell-id",$Basics.toString(getCellID(cellInfo)))
              ,$Html$Attributes.$class(A2($Basics._op["++"],classValue,isCellSelected(cellInfo) ? "selected" : ""))
              ,onClick]),
      _U.list([$Html.text(getCellValue(cellInfo))]));
   });
   var ICOCell = function (a) {    return {ctor: "ICOCell",_0: a};};
   return _elm.ICOCell.values = {_op: _op
                                ,ICOCell: ICOCell
                                ,getCellValue: getCellValue
                                ,isCellSelected: isCellSelected
                                ,getCellID: getCellID
                                ,icoCellView: icoCellView};
};