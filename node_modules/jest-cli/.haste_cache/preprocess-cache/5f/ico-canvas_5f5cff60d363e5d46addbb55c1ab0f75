var Component, DOM, ICOCanvas, ICOF, React, createElement, div,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

React = require('react');

Component = React.Component, DOM = React.DOM, createElement = React.createElement;

div = DOM.div;

ICOF = require("./../icof/icof");

ICOCanvas = (function(superClass) {
  extend(ICOCanvas, superClass);

  function ICOCanvas() {
    this.render = bind(this.render, this);
    return ICOCanvas.__super__.constructor.apply(this, arguments);
  }

  ICOCanvas.prototype._cssPrefix = "ico-canvas";

  ICOCanvas.prototype.render = function() {
    return div({
      className: "" + this._cssPrefix
    }, createElement(ICOF, {
      icofName: "Teste"
    }));
  };

  return ICOCanvas;

})(Component);

module.exports = ICOCanvas;
