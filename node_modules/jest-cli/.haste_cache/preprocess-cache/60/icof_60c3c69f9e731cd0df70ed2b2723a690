var Component, DOM, ICOF, ICOFCell, React, createElement, div,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

React = require('react');

Component = React.Component, DOM = React.DOM, createElement = React.createElement;

div = DOM.div;

ICOFCell = require("./../icof-cell/icof-cell");

ICOF = (function(superClass) {
  extend(ICOF, superClass);

  function ICOF() {
    this.render = bind(this.render, this);
    return ICOF.__super__.constructor.apply(this, arguments);
  }

  ICOF.prototype._cssPrefix = "icof";

  ICOF.propTypes = {
    icofName: React.PropTypes.string.isRequired
  };

  ICOF.prototype.render = function() {
    return div({
      className: "" + this._cssPrefix
    }, createElement(ICOFCell, {
      content: this.props.icofName
    }));
  };

  return ICOF;

})(Component);

module.exports = ICOF;
